{"version":3,"sources":["config/tools.js","utils/dom.js","components/Property.js","components/Item.js","components/Toolbar.js","App.js","serviceWorker.js","index.js"],"names":["backgroundOptions","label","options","textOptions","selector","properties","container","apply","type","value","elements","document","querySelectorAll","optClasses","Object","keys","forEach","element","classes","className","split","filter","c","includes","join","Property","index","useState","selected","setSelected","key","length","onChange","e","target","entries","map","onClick","Item","props","Toolbar","open","setOpen","style","zIndex","overflowY","height","tools","tool","App","Boolean","window","location","hostname","match","getElementById","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f80805e1.chunk.js","sourcesContent":["const backgroundOptions = {\n  label: \"Background\",\n  options: {\n    \"\": \"Default\",\n    \"bg-light\": \"Light\",\n    \"bg-dark\": \"Dark\",\n    \"bg-primary\": \"Primary\",\n    \"bg-secondary\": \"Secondary\",\n  },\n};\n\nconst textOptions = {\n  label: \"Text\",\n  options: {\n    \"\": \"Default\",\n    \"text-white\": \"White\",\n    \"text-black\": \"Black\",\n    \"text-primary\": \"Primary\",\n    \"text-secondary\": \"Secondary\",\n  },\n};\nexport default [\n  {\n    label: \"Navbar\",\n    selector: \"nav\",\n    properties: [\n      {\n        label: \"Sticky\",\n        options: {\n          \"\": \"Default\",\n          \"sticky-top\": \"Sticky Top\",\n          \"fixed-bottom\": \"Fixed Bottom\",\n        },\n      },\n      backgroundOptions,\n      textOptions,\n    ],\n  },\n  {\n    label: \"Hero\",\n    selector: \".widget-hero\",\n    properties: [backgroundOptions, textOptions],\n  },\n  {\n    label: \"Footer\",\n    selector: \"footer\",\n    properties: [\n      {\n        label: \"Layout\",\n        options: {\n          \"\": \"Default\",\n          container: \"Boxed\",\n          \"w-full\": \"Full\",\n        },\n      },\n      {\n        label: \"Padding\",\n        options: {\n          \"\": \"Default\",\n          \"p-3\": \"S\",\n          \"p-6\": \"M\",\n          \"p-10\": \"L\",\n        },\n      },\n      backgroundOptions,\n      textOptions,\n    ],\n  },\n  {\n    label: \"Headline 2 (General)\",\n    selector: \"h2,h1\",\n    properties: [textOptions],\n  },\n];\n","export const apply = (selector, type, value, options) => {\n  const elements = document.querySelectorAll(selector);\n  const optClasses = Object.keys(options);\n  elements.forEach((element) => {\n    switch (type) {\n      case \"class\":\n        const classes = element.className.split(\" \");\n        element.className = [\n          ...classes.filter((c) => !optClasses.includes(c)),\n          value,\n        ].join(\" \");\n        break;\n      default:\n        break;\n    }\n  });\n};\n","import React, { useState } from \"react\";\nimport { apply } from \"../utils/dom\";\n\nexport default function Property(\n  { options, selector, label, type = \"class\" },\n  index\n) {\n  const [selected, setSelected] = useState(\"\");\n  return (\n    <div className=\"flex flex-col\" key={index}>\n      <label className=\"text-xs\">{label}:</label>\n      {options.length < 6 ? (\n        <select\n          className=\"m-2 p-2 w-full\"\n          value={selected}\n          onChange={(e) => {\n            apply(selector, type, e.target.value, options);\n            setSelected(e.target.value);\n          }}\n        >\n          {Object.entries(options).map(([key, label]) => (\n            <option key={key} value={key}>\n              {label}\n            </option>\n          ))}\n        </select>\n      ) : (\n        <div className=\"flex flex-row\">\n          {Object.entries(options).map(([key, value]) => {\n            return (\n              <div\n                key={key}\n                className={`p-2 text-xs flex-auto text-center rounded ${\n                  key === selected ? \"bg-green-400\" : \"bg-gray-400\"\n                }`}\n                onClick={(e) => {\n                  apply(selector, type, key, options);\n                  setSelected(key);\n                }}\n              >\n                {value}\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Property from \"./Property\";\nexport default function Item({ label, properties, selector }) {\n  return (\n    <div className=\"p-2 bg-gray-600 rounded-sm mt-2\">\n      <div className=\"mt-2\">\n        <label className=\"text-xs font-bold\">{label}</label>\n      </div>\n      <div className=\"flex flex-col\">\n        {properties.map((props, index) => {\n          return <Property key={index} selector={selector} {...props} />;\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport tools from \"../config/tools\";\nimport Item from \"./Item\";\nexport default function Toolbar() {\n  const [open, setOpen] = useState(true);\n  return (\n    <>\n      <div\n        className={`fixed top-0 right-0\n        shadow\n        mt-3 mr-3 p-2\n        shadow rounded-full cursor-pointer\n        bg-green-600 text-gray-200\n        uppercase text-xs ${!open ? \"\" : \"hidden\"}`}\n        onClick={() => setOpen(true)}\n        style={{ zIndex: 9000 }}\n      >\n        Toolbar\n      </div>\n      <div\n        className={`fixed top-0  right-0 min-h-full bg-gray-700 text-gray-100 p-2 shadow cursor-pointer ${\n          open ? \"\" : \"hidden\"\n        }`}\n        style={{ overflowY: \"scroll\", zIndex: 9000, height: \"100vh\" }}\n      >\n        <div className=\"flex flex-row justify-between items-center\">\n          <h1\n            className=\"font-bold text-sm text-gray-300 uppercase\"\n            onClick={() => setOpen(false)}\n          >\n            Dynamic controls\n          </h1>\n          <button\n            className=\"p-1 rounded-full bg-gray-500 text-xs\"\n            onClick={() => setOpen(false)}\n          >\n            Hide\n          </button>\n        </div>\n\n        <div>\n          {tools.map((tool, index) => (\n            <Item key={index} {...tool} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport ToolBar from \"./components/Toolbar\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToolBar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nif (document.getElementById(\"root\")) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}